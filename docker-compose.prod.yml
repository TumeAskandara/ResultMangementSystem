version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    container_name: resultmgmt-mongo-prod
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - mongodb_data:/data/db
      - ./backup:/backup
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-network

  app:
    image: resultmgmt-app:latest
    container_name: resultmgmt-app-prod
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - mongodb
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=${MONGO_DATABASE}
      - SPRING_DATA_MONGODB_USERNAME=${MONGO_USERNAME}
      - SPRING_DATA_MONGODB_PASSWORD=${MONGO_PASSWORD}
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
    networks:
      - app-network
    volumes:
      - ./logs:/app/logs

  nginx:
    image: nginx:alpine
    container_name: resultmgmt-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - app-network

volumes:
  mongodb_data:

networks:
  app-network:
    driver: bridge
